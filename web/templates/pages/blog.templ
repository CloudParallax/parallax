package pages

import "time"

type BlogPost struct {
	ID          string
	Title       string
	Slug        string
	Summary     string
	Content     string
	Author      string
	PublishedAt time.Time
	Tags        []string
	ReadTime    int
}

templ BlogListPage(posts []BlogPost) {
	<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
		<div class="mb-8">
			<h1 class="text-4xl font-bold text-gray-900 mb-4">Blog</h1>
			<p class="text-xl text-gray-600">
				Insights, tutorials, and thoughts on cloud infrastructure and modern development.
			</p>
		</div>

		<div class="space-y-8">
			for _, post := range posts {
				<article class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden hover:shadow-md transition-shadow duration-200">
					<div class="p-6">
						<div class="flex items-center text-sm text-gray-500 mb-3">
							<time datetime={ post.PublishedAt.Format("2006-01-02") }>
								{ post.PublishedAt.Format("January 2, 2006") }
							</time>
							<span class="mx-2">•</span>
							<span>{ string(rune(post.ReadTime)) } min read</span>
						</div>

						<h2 class="text-2xl font-bold text-gray-900 mb-3">
							<a
								href={ templ.URL("/blog/" + post.Slug) }
								class="hover:text-blue-600 transition-colors duration-200"
								hx-get={ "/blog/" + post.Slug }
								hx-target="#main-content"
								hx-push-url="true"
							>
								{ post.Title }
							</a>
						</h2>

						<p class="text-gray-600 mb-4 leading-relaxed">
							{ post.Summary }
						</p>

						<div class="flex items-center justify-between">
							<div class="flex items-center space-x-2">
								if len(post.Tags) > 0 {
									for _, tag := range post.Tags {
										<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
											{ tag }
										</span>
									}
								}
							</div>

							<a
								href={ templ.URL("/blog/" + post.Slug) }
								class="text-blue-600 hover:text-blue-700 font-medium text-sm transition-colors duration-200"
								hx-get={ "/blog/" + post.Slug }
								hx-target="#main-content"
								hx-push-url="true"
							>
								Read more →
							</a>
						</div>
					</div>
				</article>
			}
		</div>

		if len(posts) == 0 {
			<div class="text-center py-12">
				<div class="text-gray-400 mb-4">
					<svg class="mx-auto h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
					</svg>
				</div>
				<h3 class="text-lg font-medium text-gray-900 mb-2">No blog posts yet</h3>
				<p class="text-gray-500">Check back soon for new content!</p>
			</div>
		}
	</div>
}

templ BlogPostPage(post BlogPost) {
	<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
		<article class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
			<div class="p-8">
				<div class="mb-6">
					<a
						href="/blog"
						class="text-blue-600 hover:text
-blue-700 text-sm font-medium transition-colors duration-200"
						hx-get="/blog"
						hx-target="#main-content"
						hx-push-url="true"
					>
						← Back to Blog
					</a>
				</div>
				
				<header class="mb-8">
					<h1 class="text-4xl font-bold text-gray-900 mb-4">{ post.Title }</h1>
					
					<div class="flex items-center text-sm text-gray-500 mb-4">
						<span class="font-medium">By { post.Author }</span>
						<span class="mx-2">•</span>
						<time datetime={ post.PublishedAt.Format("2006-01-02") }>
							{ post.PublishedAt.Format("January 2, 2006") }
						</time>
						<span class="mx-2">•</span>
						<span>{ string(rune(post.ReadTime)) } min read</span>
					</div>
					
					if len(post.Tags) > 0 {
						<div class="flex items-center space-x-2">
							for _, tag := range post.Tags {
								<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
									{ tag }
								</span>
							}
						</div>
					}
				</header>
				
				<div class="prose prose-lg max-w-none">
					@templ.Raw(post.Content)
				</div>
			</div>
		</article>
	</div>
}